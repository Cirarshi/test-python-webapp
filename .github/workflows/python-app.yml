# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


      - name: Test with pytest
        run: |
          pytest

  deploy-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Deploy to Staging
        run: |
          echo "${{ secrets.STAGING_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} "cd /var/www && git pull"

  deploy-production:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Deploy to Production
        run: |
          echo "${{ secrets.PROD_KEY }}" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "cd /var/www && git pull"
